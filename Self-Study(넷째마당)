##자바스크립트 기초##

#chapter13#
<웹의 요소 제어>
사이트에서 메인 메뉴 위로 마우스 포인터를 올리면 오른쪽 그림처럼 숨어 있는 하위 메뉴가 펼쳐진다.
또한 포털사이트에서 '뉴스'나 '자동차' 같은 제목을 클릭하거나 화면 상단 오른쪽에 있는 화살표 버튼을 클릭하면 고정된 위치에서 새로운 콘텐츠를 보여준다.
이와 비슷한 기능인 탭은 클릭하면 그에 해당하는 콘텐츠만 바뀌어 그대로 나타난다. 공간을 절약하면서 필요한 내용만 골라서 볼 수 있어서 최근에 많이 사용한다고 한다.
사용자 정보를 서버로 전송하는 폼에서 입력된 정보가 형식에 맞는지, 마우스의 동작이나 키보드에서 어떤 키를 눌렀을때 반응하는 기능에 이르기까지 웹에서 자바스크립트의 역할이 다양하다.

<웹 애플리케이션 형성>
온라인 지도의 길 찾기 서비스, 사회에서 특별한 이슈가 있을 때 중요한 정보를 시각화해 국민에게 보여주는 사이트 모두 자바스크립트로 만든다. 
이러한 사이트를 만들려면 지도 API나 데이터 시각화 라이브러리를 사용해야 하는데 모두 공개되어 있으므로 누구나 사용가능.

<다양한 라이브러리 사용 가능>
과거 서버에서 했던 일을 이제는 클라이언트에서도 할수 있다. 클라이언트에서 처리해야 할 기능이 많아지면서 자바스크립트 기능은 더욱 강력해지는 추세.

<서버 개발 가능>
Node.js는 그동안 프론트엔드 개발에서 사용하던 자바스크립트를 백엔드 개발에서 사용할 수 있도록 만든 프레임워크이다.

<웹 문서 안에 <script>태그로 자바 스크립트 작성하기>
<script>태그는 웹 문서 안의 어디든 위치할 수 있고 삽입된 위치 그 자리에서 바로 스크립트가 실행됨. 또한 이 태그는 하나의 문서에서 여러개 사용도 가능.
HTML,CSS와 달리 자바에서는 영어 대소문자를 구별하므로 소스 작성시 주의.

자바스크립트 소스도 따로 파일로 저장한 후 웹 문서에 연결해서 사용할 수 있다. 이렇게 하면 웹 문서 안에는 직접 자바스크립트 소스가 드러나지 않고 HTML태그와 CSS만 유지할 수 있어 소스가 깔끔해짐.

<식과 문>
자바스크립트언어의 큰 줄기는 식(expression)과 문(statement)이다. 식:표현식 , 문:명령문. 

<간단한 입출력 방법>
알림 창 출력: alert(메시지)
확인 창 출력: confirm(메시지)
프롬프트 창에서 입력받기: prompt(메시지) 또는 prompt(메시지, 기본값)
출력을 담당하는 document.write()문: <script>document.write("<h1>어서오세요</h1>);</script>
콘솔 창에 풀력하는 console.log()문: <script> var name = promt("이름을 입력하세요."); console.log(name + "님, 환영합니다,"); </script>

<코딩규칙>
자바스크립트 코딩 규칙은 [*스타일 가이드 *코딩 컨벤션 *코딩 스타일 *표준 스타일] 이라고도 한다.

<소스 작성 시 지켜야 할 규칙>
1. 코드를 보기 좋게 들여쓰기 한다.
2. 세미콜론으로 문장을 구분한다.
3. 공백을 넣어 읽기 쉽게 작성한다.
4. 소스 코드를 잘 설명하는 주석을 작성한다.
5. 식별자는 정해진 규틱을 지켜 작성한다.
6. 예약어는 식별자로 사용할 수 없다.

#chapter14#
<변수>
변수(variable): 프로그램을 실행하는 동안 값이 여러 번 달라질 수 있는 데이터를 가리킨다.
상수(constant): 값을 한번 지정하면 바뀌지 않는 데이터
변수 선언규칙 (-변수를 사용하려면 변수를 구별할 수있도록 이름을 붙여 주어야 한다.)
1. 변수 이름은 영어 문자와 언더스코어(_), 숫자를 사용한다.
2. 자바스크립트는 영어 대소 문자를 구별하며 예약어는 변수 이름으로 쓸 수 없다.
3. 여러 단어를 연결한 변수 이름은 중간에 대문자를 섞어쓴다.
4. 변수 이름은 의미있게 작성해야한다.
변수선언 -> var 변수명

<자료형>
자료형(data type): 컴퓨터가 처리할 수있는 자료의 형태
- 기본 유형: 숫자, 문자열, 논리형..
- 복합 유형: 배열, 객체를 다룸
- 특수 유형: underfined, null과 같은..
<숫자형>
숫자형(number)은 정수와 실수로 나눠구분.
-정수: 소수점 없는 숫자 ex). 100
-실수: 소수점이 있는 숫자 ex). 4.13
<문자열>
문자열(string): 작은 따옴표('')나 큰따옴표("")로 묶은 데이터
- 숫자도 작은따옴표나 큰따옴표로 묶으면 문자열로 인식. --> 단, 작은따옴표(/큰따옴표)로 시작한 문자열 데이터는 작은 따옴표(/큰 따옴표)로 끝맺음을 해야함.
<논리형>
논리형: 불린유형, 참이나 거짓의 값을 표현하는 자료

<조건문>
- if문과 if~else문
<논리 연산자>
-OR연산자, AND연산자, NOT연산자
<switch문>
<반복문>
<for문>
<while문과 do~while문>
<break문과 continue문>

#chapter15#
<함수 선언하고 호출하기>
function 함수명() { //함수 선언하기
   명령
   }
함수명() 또는 함수명 (변수)

<함수 표현식>
-익명 함수: 이름 없이 선언한 함수: function(매개변수) {명령}
-화살표 함수: ES6부터 지원하는 방법으로 화살표 기호(=>) 왼쪽에는 매개변수, 오른쪽에는 함수 작성. 익명함수일 경우에만 사용가능: (매개변수) => {함수 내용}
- 즉시 실행 함수: 함수르 정의하는 것과 동시에 실행 (function() {명령}());  (function(매개변수) {명령 }(인수));

<이벤트와 이벤트 처리기>
- 이벤트: 키보드에서 키를 누르거나 브라우저가 웨 페이지를 불러오는 것터럼 웹 브라우저나 사용자가 행하는 동작
- 이벤트 처리기: 웹 문서에서 이벤트가 발생할 때 그 이벤트에 반응해서 실행하는 함수

<var, let, const로 선언한 변수비교>
구분        var        let        const
---------------------------------------------
스코프    함수레벨    블록레벨    블록 레벨
재할당     가능         가능        가능
재선언     가능        불가능      불가능

#chapter16#
<객체 알아보기>
-객체(object): 프로그램에서인식할 수 있는 모든 대상
-프로퍼티(property): 객체의 특징이나 속성
-메서드(method): 객체에서 할 수 있는 동작
-객체 인스턴스 만들기: new 객체명
- 객체의 프로퍼티와 메서드 사용하기: 객체명.프로터티  /  객체명.메서드
<자바스크립트의 내장 객체>
종류       설명
----------------------------------------------------------------------------------------------------------------
window     브라우저 창이 열리 때마다 하나씩 만들어진다. 브라우저 창 안의 요소 중에서 최상위에 있다.
document   웹 페이지마다 하나씩 있으며 <body>태그를 만나면 만들어진다. HTML문서의 정보가 담겨있다.
navigator  현재 사용하는 브라우저의 정보가 들어있다
history    현재 창에서 사용자으 ㅣ방문 기록을 저장한다.
location   현재 페이지의 URL 정보가 담겨있다.
screen     현재 사용하는 화면 정보를 다룬다.

#chapter17#
<DOM 트리의 노드>
-요소 노드: 모든 HTML 태그를 의미한다.
-텍스트 노드: 태그의 텍스트 내용이다.
-속성 노드: 태그의 속성이다.
-주석 노드: 주석이다.

<<DOM>에 접근하기>
- getElementById(id): id명으로 접근한다.
- getElementsByClassName(class): 클래스명으로 접근하며 여러 요소가 배열 형태로 저장된다. 
- getElementsByTagName(tag): 태그명으로 접근하며 여러 요소가 배열 형태로 저장된다.
-querySelectior(): id명이나 선택자를 사용해 접근한다.
-querySelectiorAll(): 클래스명이나 태그명의 선택자를 사용해 접근한다. 여러 노드가 노드 리스트 형태로 저장된다.
-속성 가져오기 및 수정하기
 getAttribute(속성)
 setAttribute(속성, 값)
-이벤트 처리하기
 요소.addEventListener(이벤트, 함수, 캡처 여부)
-CSS속성에 접근하기
 document.요소명.style.속성명
 
 <텍스트 노드를 사용하는 새로운 요소 추가하기>
 순서          메서드           설명
 -------------------------------------------------------------------------------------------------
  1        createElement()    새로운 요소 노드를 만듭니다.
  2        creatTextNode()    새로운 텍스트 노드를 만듭니다.
  3        appendChild()      텍스트 노드를 요소 노드의 자식으로 연결합니다.
  4        appendChild()      요소 노드를 DOM에 연결합니다.
  
  <속성값이 있는 새로운 요소 추가하기>
   순서          메서드           설명
 -------------------------------------------------------------------------------------------------
  1        createElement()      새로운 요소 노드를 추가합니다.
  2        creatAttribute()     새로운 텍스트 노드를 추가합니다.
  3        속성값 지정하기       속성값을 프로퍼티로 지정합니다.
  4        setAttributeNode()   속송노드를 요소 노드의 자식으로 연결합니다.
  5        appendChild()        요소 노드를 DOM에 연결합니다.
  
  <노드 삭제>
  parentNode 프로퍼티로 부모 노드를 찾아서 부모 노드에서 삭제합니다.
   부모노드.removeChild(자식노드)
   
   ##느낀점##
   자바스크립트를 책으로 혼자 공부하고, 강의도 듣고, 직접 js를 써보니까 확실히 도움이 되는 것 같다.
   그냥 수업만 듣고 넘어갔으면 하나도 몰랐을 것 같은데 이런 프로젝트를 통해 공부를 한다는게 참 좋은 경험이고 기회인 것 같다.
   하지만 아직 익숙하지도 않고 경험도 없어서 잘 안풀린다.
   그래서 그런가 잘풀리면 너무 재밌는데 안풀릴때는 너무 답답하고 뇌가 터질 것 같다.
   개발자가 참 대단하다고 또 한번 느꼈다.
 
